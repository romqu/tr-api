/*
 * This file is generated by jOOQ.
 */
package de.romqu.trdesktopapi.public_.tables.daos;


import de.romqu.trdesktopapi.public_.tables.SessionEntity;
import de.romqu.trdesktopapi.public_.tables.records.SessionRecordEntity;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class SessionDaoEntity extends DAOImpl<SessionRecordEntity, de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity, Long> {

    /**
     * Create a new SessionDaoEntity without any configuration
     */
    public SessionDaoEntity() {
        super(SessionEntity.SESSION, de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity.class);
    }

    /**
     * Create a new SessionDaoEntity with an attached configuration
     */
    @Autowired
    public SessionDaoEntity(Configuration configuration) {
        super(SessionEntity.SESSION, de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity.class, configuration);
    }

    @Override
    @NotNull
    public Long getId(de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfIdEntity(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SessionEntity.SESSION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByIdEntity(Long... values) {
        return fetch(SessionEntity.SESSION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByIdEntity(Long value) {
        return fetchOne(SessionEntity.SESSION.ID, value);
    }

    /**
     * Fetch records that have <code>uuid_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfUuidIdEntity(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SessionEntity.SESSION.UUID_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid_id IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByUuidIdEntity(UUID... values) {
        return fetch(SessionEntity.SESSION.UUID_ID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid_id = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByUuidIdEntity(UUID value) {
        return fetchOne(SessionEntity.SESSION.UUID_ID, value);
    }

    /**
     * Fetch records that have <code>device_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfDeviceIdEntity(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SessionEntity.SESSION.DEVICE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>device_id IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByDeviceIdEntity(UUID... values) {
        return fetch(SessionEntity.SESSION.DEVICE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>device_id = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByDeviceIdEntity(UUID value) {
        return fetchOne(SessionEntity.SESSION.DEVICE_ID, value);
    }

    /**
     * Fetch records that have <code>token BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfTokenEntity(String lowerInclusive, String upperInclusive) {
        return fetchRange(SessionEntity.SESSION.TOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>token IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByTokenEntity(String... values) {
        return fetch(SessionEntity.SESSION.TOKEN, values);
    }

    /**
     * Fetch a unique record that has <code>token = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByTokenEntity(String value) {
        return fetchOne(SessionEntity.SESSION.TOKEN, value);
    }

    /**
     * Fetch records that have <code>refresh_token BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfRefreshTokenEntity(String lowerInclusive, String upperInclusive) {
        return fetchRange(SessionEntity.SESSION.REFRESH_TOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>refresh_token IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByRefreshTokenEntity(String... values) {
        return fetch(SessionEntity.SESSION.REFRESH_TOKEN, values);
    }

    /**
     * Fetch a unique record that has <code>refresh_token = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByRefreshTokenEntity(String value) {
        return fetchOne(SessionEntity.SESSION.REFRESH_TOKEN, value);
    }

    /**
     * Fetch records that have <code>tracking_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfTrackingIdEntity(String lowerInclusive, String upperInclusive) {
        return fetchRange(SessionEntity.SESSION.TRACKING_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tracking_id IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByTrackingIdEntity(String... values) {
        return fetch(SessionEntity.SESSION.TRACKING_ID, values);
    }

    /**
     * Fetch a unique record that has <code>tracking_id = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByTrackingIdEntity(String value) {
        return fetchOne(SessionEntity.SESSION.TRACKING_ID, value);
    }

    /**
     * Fetch records that have <code>reset_process_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfResetProcessIdEntity(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SessionEntity.SESSION.RESET_PROCESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reset_process_id IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByResetProcessIdEntity(UUID... values) {
        return fetch(SessionEntity.SESSION.RESET_PROCESS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>reset_process_id = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByResetProcessIdEntity(UUID value) {
        return fetchOne(SessionEntity.SESSION.RESET_PROCESS_ID, value);
    }

    /**
     * Fetch records that have <code>keypair_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchRangeOfKeypairIdEntity(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SessionEntity.SESSION.KEYPAIR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>keypair_id IN (values)</code>
     */
    @NotNull
    public List<de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity> fetchByKeypairIdEntity(Long... values) {
        return fetch(SessionEntity.SESSION.KEYPAIR_ID, values);
    }

    /**
     * Fetch a unique record that has <code>keypair_id = value</code>
     */
    @Nullable
    public de.romqu.trdesktopapi.public_.tables.pojos.SessionEntity fetchOneByKeypairIdEntity(Long value) {
        return fetchOne(SessionEntity.SESSION.KEYPAIR_ID, value);
    }
}
